{"version":3,"file":"custom-effects.js","sources":["src/custom-effects.js"],"sourcesContent":["export default base => class CustomEffects extends base {\r\n  constructor() {\r\n    super();\r\n    const effects = customElements.get(this.localName).effects;\r\n    if (effects) {\r\n      for (const effect of effects) {\r\n        this._initEffect(effect);\r\n      }\r\n    }\r\n  }\r\n\r\n  _initEffect(effect) {\r\n    if (typeof effect === 'string') {\r\n      effect = [effect, effect === 'resize' || effect === 'scroll' ? window : this];\r\n    };\r\n    return new Promise((resolve, reject) => {\r\n      effect[1].addEventListener(effect[0], event => {\r\n        const func = effect[0].slice(0, 1).toUpperCase() + effect[0].slice(1);\r\n        if (this[`on${func}`]) {\r\n          this[`on${func}`](event);\r\n        } else {\r\n          console.warn(`on${func} method missing`);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n"],"names":["base","CustomEffects","effects","customElements","get","localName","effect","_initEffect","window","Promise","resolve","reject","addEventListener","event","func","slice","toUpperCase","warn"],"mappings":";;;AAAA,qBAAeA,QAAQ,MAAMC,aAAN,SAA4BD,IAA5B,CAAiC;gBACxC;;UAENE,UAAUC,eAAeC,GAAf,CAAmB,KAAKC,SAAxB,EAAmCH,OAAnD;QACIA,OAAJ,EAAa;WACN,MAAMI,MAAX,IAAqBJ,OAArB,EAA8B;aACvBK,WAAL,CAAiBD,MAAjB;;;;cAKMA,MAAZ,EAAoB;QACd,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;eACrB,CAACA,MAAD,EAASA,WAAW,QAAX,IAAuBA,WAAW,QAAlC,GAA6CE,MAA7C,GAAsD,IAA/D,CAAT;;WAEK,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;aAC/B,CAAP,EAAUC,gBAAV,CAA2BN,OAAO,CAAP,CAA3B,EAAsCO,SAAS;cACvCC,OAAOR,OAAO,CAAP,EAAUS,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,EAAsBC,WAAtB,KAAsCV,OAAO,CAAP,EAAUS,KAAV,CAAgB,CAAhB,CAAnD;YACI,KAAM,KAAID,IAAK,EAAf,CAAJ,EAAuB;eACf,KAAIA,IAAK,EAAf,EAAkBD,KAAlB;SADF,MAEO;kBACGI,IAAR,CAAc,KAAIH,IAAK,iBAAvB;;OALJ;KADK,CAAP;;CAfJ;;;;"}